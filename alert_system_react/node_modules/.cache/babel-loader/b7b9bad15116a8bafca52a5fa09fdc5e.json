{"ast":null,"code":"var circles = [],\n    canvas = document.getElementById(\"canvas1\"),\n    context = canvas.getContext(\"2d\"),\n    // SETTINGS \nopacity = 0.6,\n    // the opacity of the circles 0 to 1\ncolors = ['rgba(34, 49, 63,' + opacity + ')', // an array of rgb colors for the circles\n'rgba(189, 195, 199,' + opacity + ')', 'rgba(241, 196, 15,' + opacity + ')', 'rgba(231, 76, 60,' + opacity + ')', 'rgba(231, 76, 60,' + opacity + ')'],\n    minSize = 1,\n    // the minimum size of the circles in px\nmaxSize = 10,\n    // the maximum size of the circles in px\nnumCircles = 300,\n    // the number of circles\nminSpeed = -2,\n    // the minimum speed, recommended: -maxspeed\nmaxSpeed = 2,\n    // the maximum speed of the circles\nexpandState = true; // the direction of expansion\n\nfunction buildArray() {\n  'use strict';\n\n  for (var i = 0; i < numCircles; i++) {\n    var color = Math.floor(Math.random() * (colors.length - 1 + 1)) + 1,\n        left = Math.floor(Math.random() * (canvas.width - 0 + 1)) + 0,\n        top = Math.floor(Math.random() * (canvas.height - 0 + 1)) + 0,\n        size = Math.floor(Math.random() * (maxSize - minSize + 1)) + minSize,\n        leftSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed) / 10,\n        topSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed) / 10,\n        expandState = expandState;\n\n    while (leftSpeed == 0 || topSpeed == 0) {\n      leftSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed) / 10, topSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed) / 10;\n    }\n\n    var circle = {\n      color: color,\n      left: left,\n      top: top,\n      size: size,\n      leftSpeed: leftSpeed,\n      topSpeed: topSpeed,\n      expandState: expandState\n    };\n    circles.push(circle);\n  }\n}\n\nfunction build() {\n  'use strict';\n\n  for (var h = 0; h < circles.length; h++) {\n    var curCircle = circles[h];\n    context.fillStyle = colors[curCircle.color - 1];\n    context.beginPath();\n\n    if (curCircle.left > canvas.width + curCircle.size) {\n      curCircle.left = 0 - curCircle.size;\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    } else if (curCircle.left < 0 - curCircle.size) {\n      curCircle.left = canvas.width + curCircle.size;\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    } else {\n      curCircle.left = curCircle.left + curCircle.leftSpeed;\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    }\n\n    if (curCircle.top > canvas.height + curCircle.size) {\n      curCircle.top = 0 - curCircle.size;\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    } else if (curCircle.top < 0 - curCircle.size) {\n      curCircle.top = canvas.height + curCircle.size;\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    } else {\n      curCircle.top = curCircle.top + curCircle.topSpeed;\n\n      if (curCircle.size != maxSize && curCircle.size != minSize && curCircle.expandState == false) {\n        curCircle.size = curCircle.size - 0.1;\n      } else if (curCircle.size != maxSize && curCircle.size != minSize && curCircle.expandState == true) {\n        curCircle.size = curCircle.size + 0.1;\n      } else if (curCircle.size == maxSize && curCircle.expandState == true) {\n        curCircle.expandState = false;\n        curCircle.size = curCircle.size - 0.1;\n      } else if (curCircle.size == minSize && curCircle.expandState == false) {\n        curCircle.expandState = true;\n        curCircle.size = curCircle.size + 0.1;\n      }\n\n      context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\n    }\n\n    context.closePath();\n    context.fill();\n    context.ellipse;\n  }\n}\n\nvar xVal = 0;\n\nwindow.requestAnimFrame = function (callback) {\n  'use strict';\n\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n\nfunction animate() {\n  'use strict';\n\n  var canvas = document.getElementById(\"canvas1\"),\n      context = canvas.getContext(\"2d\"); // clear the canvas\n\n  context.clearRect(0, 0, canvas.width, canvas.height); // draw the next frame\n\n  xVal++;\n  build(); //console.log(\"Prep: animate ==> requestAnimFrame\");\n  // request a new frame\n\n  requestAnimFrame(function () {\n    animate();\n  });\n}\n\nwindow.onload = function () {\n  'use strict';\n\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  buildArray();\n  animate();\n};\n\nwindow.onresize = function () {\n  'use strict';\n\n  console.log(\"resize\");\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight; //buildArray();\n\n  animate();\n};","map":{"version":3,"sources":["C:\\Users\\emrec\\OneDrive\\Masaüstü\\AlertSystem\\alert_system_react\\src\\components\\mainpage\\Karsilama.js"],"names":["circles","canvas","document","getElementById","context","getContext","opacity","colors","minSize","maxSize","numCircles","minSpeed","maxSpeed","expandState","buildArray","i","color","Math","floor","random","length","left","width","top","height","size","leftSpeed","topSpeed","circle","push","build","h","curCircle","fillStyle","beginPath","arc","PI","closePath","fill","ellipse","xVal","window","requestAnimFrame","callback","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","animate","clearRect","onload","innerWidth","innerHeight","onresize","console","log"],"mappings":"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","sourcesContent":["var circles = [],\r\n    canvas = document.getElementById(\"canvas1\"),\r\n    context = canvas.getContext(\"2d\"),\r\n    \r\n    // SETTINGS \r\n    opacity = 0.6,                                      // the opacity of the circles 0 to 1\r\n    colors = ['rgba(34, 49, 63,' + opacity + ')',       // an array of rgb colors for the circles\r\n              'rgba(189, 195, 199,' + opacity + ')',\r\n              'rgba(241, 196, 15,' + opacity + ')',\r\n              'rgba(231, 76, 60,' + opacity + ')',\r\n              'rgba(231, 76, 60,' + opacity + ')'\r\n             ],\r\n    minSize = 1,                                        // the minimum size of the circles in px\r\n    maxSize = 10,                                       // the maximum size of the circles in px\r\n    numCircles = 300,                                   // the number of circles\r\n    minSpeed = -2,                                     // the minimum speed, recommended: -maxspeed\r\n    maxSpeed = 2,                                    // the maximum speed of the circles\r\n    expandState = true;                                      // the direction of expansion\r\n\r\nfunction buildArray() {\r\n    'use strict';\r\n    \r\n    for (var i =0; i < numCircles ; i++){\r\n        var color = Math.floor(Math.random() * (colors.length - 1 + 1)) + 1,\r\n            left = Math.floor(Math.random() * (canvas.width - 0 + 1)) + 0,\r\n            top = Math.floor(Math.random() * (canvas.height - 0 + 1)) + 0,\r\n            size = Math.floor(Math.random() * (maxSize - minSize + 1)) + minSize,\r\n            leftSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed)/10,\r\n            topSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed)/10,\r\n            expandState = expandState;\r\n           \r\n            while(leftSpeed == 0 || topSpeed == 0){\r\n                leftSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed)/10,\r\n                topSpeed = (Math.floor(Math.random() * (maxSpeed - minSpeed + 1)) + minSpeed)/10;\r\n            }\r\n        var circle = {color:color, left:left, top:top, size:size, leftSpeed:leftSpeed, topSpeed:topSpeed, expandState:expandState };\r\n        circles.push(circle);\r\n    }\r\n}\r\n\r\nfunction build(){\r\n    'use strict';\r\n    \r\n    for(var h = 0; h < circles.length; h++){\r\n        var curCircle = circles[h];\r\n        context.fillStyle = colors[curCircle.color-1];\r\n        context.beginPath();\r\n        if(curCircle.left > canvas.width+curCircle.size){\r\n            curCircle.left = 0-curCircle.size;\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\r\n        }else if(curCircle.left < 0-curCircle.size){\r\n            curCircle.left = canvas.width+curCircle.size;\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\r\n        }else{\r\n            curCircle.left = curCircle.left+curCircle.leftSpeed;\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false); \r\n        }\r\n        \r\n        if(curCircle.top > canvas.height+curCircle.size){\r\n            curCircle.top = 0-curCircle.size;\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\r\n\r\n        }else if(curCircle.top < 0-curCircle.size){\r\n            curCircle.top = canvas.height+curCircle.size;\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false);\r\n        }else{\r\n            curCircle.top = curCircle.top+curCircle.topSpeed;\r\n            if(curCircle.size != maxSize && curCircle.size != minSize && curCircle.expandState == false){\r\n              curCircle.size = curCircle.size-0.1;\r\n            }\r\n            else if(curCircle.size != maxSize && curCircle.size != minSize && curCircle.expandState == true){\r\n              curCircle.size = curCircle.size+0.1;\r\n            }\r\n            else if(curCircle.size == maxSize && curCircle.expandState == true){\r\n              curCircle.expandState = false;\r\n              curCircle.size = curCircle.size-0.1;\r\n            }\r\n            else if(curCircle.size == minSize && curCircle.expandState == false){\r\n              curCircle.expandState = true;\r\n              curCircle.size = curCircle.size+0.1;\r\n            }\r\n            context.arc(curCircle.left, curCircle.top, curCircle.size, 0, 2 * Math.PI, false); \r\n        }\r\n        \r\n        context.closePath();\r\n        context.fill();\r\n        context.ellipse;\r\n    }\r\n}\r\n\r\n\r\nvar xVal = 0;\r\n\r\nwindow.requestAnimFrame = (function (callback) {\r\n    'use strict';\r\n    return window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    function (callback) {\r\n        window.setTimeout(callback, 1000/60);\r\n    };\r\n})();\r\n\r\nfunction animate() {\r\n    'use strict';\r\n    var canvas = document.getElementById(\"canvas1\"),\r\n        context = canvas.getContext(\"2d\");\r\n\r\n    // clear the canvas\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n    // draw the next frame\r\n    xVal++;\r\n    build();\r\n\r\n    //console.log(\"Prep: animate ==> requestAnimFrame\");\r\n    // request a new frame\r\n    requestAnimFrame(function () {\r\n        animate();\r\n    });\r\n}\r\nwindow.onload = function () {\r\n    'use strict';\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    buildArray();\r\n    animate();\r\n};\r\n\r\n\r\nwindow.onresize = function () {\r\n    'use strict';\r\n    console.log(\"resize\");\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n    //buildArray();\r\n    animate();\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\AlertSystem\\\\alert_system_react\\\\src\\\\components\\\\detailpage\\\\graphics.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './graphics.css';\nimport { CanvasJSChart, CanvasJS } from '../../canvasjs.react';\n\nclass Graphics extends Component {\n  constructor() {\n    super();\n    this._isMouted = false;\n    this.state = {\n      name: '',\n      situations: [],\n      mounted: true,\n      period: 0,\n      requestName: '',\n      url: ''\n    };\n  }\n\n  setSituation() {\n    axios.get('http://localhost:8080/alerts/' + this.props.match.params.name).then(response => {\n      if (this._isMouted) {\n        this.setState({\n          name: response.data[0].name,\n          period: response.data[0].period,\n          requestName: response.data[0].requestName,\n          situations: [...response.data[0].situations],\n          url: response.data[0].url\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this._isMouted = true;\n    this.setSituation();\n  }\n\n  componentDidUpdate() {\n    this.setSituation();\n  }\n\n  componentWillUnmount() {\n    this._isMouted = false;\n  }\n\n  render() {\n    let dps = this.state.situations.map((situation, index) => {\n      let date = new Date(situation.date);\n      return {\n        x: date,\n        y: situation.downorup,\n        toolTipContent: situation.response\n      };\n    });\n    let last_25_dps = dps.length < 20 ? [...dps] : [...dps.slice(dps.length - 20, dps.length)];\n    let options = {\n      title: {\n        text: this.state.name + ' isimli kullanıcının verileri aşağıdaki gibidir.',\n        fontColor: \"lightslategray\",\n        fontFamily: \"helvetica\",\n        fontSize: 30,\n        padding: 10,\n        margin: 50,\n        fontWeight: \"bold\"\n      },\n      axisX: {\n        labelFormatter: function (e) {\n          return CanvasJS.formatDate(e.value, \"YYYY-MM-DD HH:mm:ss\");\n        },\n        labelAngle: -50\n      },\n      data: [{\n        type: \"line\",\n        showInLegend: true,\n        name: this.state.requestName + \" işlemi için: \" + this.state.url + \" web adresi \" + this.state.period + \" saniyede kontrol edilmektedir.\",\n        dataPoints: last_25_dps\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Graphics;","map":{"version":3,"sources":["C:\\Users\\emrec\\OneDrive\\Masaüstü\\AlertSystem\\alert_system_react\\src\\components\\detailpage\\graphics.js"],"names":["React","Component","axios","CanvasJSChart","CanvasJS","Graphics","constructor","_isMouted","state","name","situations","mounted","period","requestName","url","setSituation","get","props","match","params","then","response","setState","data","catch","err","console","log","componentDidMount","componentDidUpdate","componentWillUnmount","render","dps","map","situation","index","date","Date","x","y","downorup","toolTipContent","last_25_dps","length","slice","options","title","text","fontColor","fontFamily","fontSize","padding","margin","fontWeight","axisX","labelFormatter","e","formatDate","value","labelAngle","type","showInLegend","dataPoints","ref","chart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './graphics.css'\r\nimport { CanvasJSChart, CanvasJS} from '../../canvasjs.react';\r\nclass Graphics extends Component {\r\n    _isMouted = false;\r\n    constructor() {\r\n        super();\r\n        this.state = {name: '',\r\n                      situations: [],\r\n                      mounted: true,\r\n                      period: 0,\r\n                      requestName: '',\r\n                      url: ''\r\n                    };\r\n    }\r\n    setSituation(){\r\n        axios.get('http://localhost:8080/alerts/'+this.props.match.params.name)\r\n        .then(response =>{\r\n            if(this._isMouted){\r\n                this.setState({name: response.data[0].name,\r\n                               period: response.data[0].period,\r\n                               requestName: response.data[0].requestName,\r\n                               situations:[...response.data[0].situations],\r\n                               url: response.data[0].url});\r\n            }\r\n        }).catch(err =>{\r\n            console.log(err);\r\n        });\r\n    }\r\n\tcomponentDidMount() {\r\n        this._isMouted=true;\r\n        this.setSituation();\r\n    }\r\n    componentDidUpdate(){\r\n        this.setSituation();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMouted=false;\r\n    }\r\n\trender() {\r\n        let dps = this.state.situations.map((situation, index)=>{\r\n            let date = new Date(situation.date);\r\n            return {x: date, y: situation.downorup, toolTipContent: situation.response}\r\n        });\r\n        let last_25_dps =( (dps.length < 20) ? [...dps] : [...dps.slice(dps.length-20, dps.length)]);\r\n        let options = {\r\n\t\t\ttitle :{\r\n                text: this.state.name + ' isimli kullanıcının verileri aşağıdaki gibidir.',\r\n                fontColor: \"lightslategray\",\r\n                fontFamily: \"helvetica\",\r\n                fontSize: 30,\r\n                padding: 10,\r\n                margin: 50,\r\n                fontWeight: \"bold\"\r\n            },\r\n            \r\n            axisX: {\r\n                labelFormatter: function (e) {\r\n                    return CanvasJS.formatDate( e.value, \"YYYY-MM-DD HH:mm:ss\");\r\n                },\r\n                labelAngle: -50\r\n               \r\n            },\r\n        \r\n            data: [{\r\n                type: \"line\",\r\n\t\t\t\tshowInLegend: true,\r\n\t\t\t\tname:  this.state.requestName + \" işlemi için: \" + this.state.url + \" web adresi \" + this.state.period + \" saniyede kontrol edilmektedir.\",\r\n\t\t\t\tdataPoints : last_25_dps\r\n\t\t\t}]\r\n\t\t}\r\n\t\treturn (\r\n            <div className = \"graph\"> \r\n                <div>\r\n                    <CanvasJSChart options = {options}\r\n                        onRef={ref => this.chart = ref}\r\n                    />\r\n                </div>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Graphics;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\AlertSystem\\\\alert_system_react\\\\src\\\\components\\\\mainpage\\\\alertLinks.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './main.css';\n\nclass AlertLinks extends Component {\n  constructor(props) {\n    super(props);\n    this._isMouted = false;\n    this.state = {\n      names: [],\n      start: false\n    };\n    this.delete = this.delete.bind(this);\n  }\n\n  getNames() {\n    axios.get('http://localhost:8080/getNames').then(response => {\n      if (this._isMouted) {\n        this.setState({\n          names: [...response.data],\n          start: true\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this._isMouted = true;\n    this.getNames();\n  }\n\n  componentDidUpdate() {\n    this.getNames();\n  }\n\n  componentWillUnmount() {\n    this._isMouted = false;\n  }\n\n  delete(name) {\n    axios.delete('http://localhost:8080/delete/' + name).then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    let namesMap = this.state.names.map((nam, index) => {\n      return React.createElement(\"tr\", {\n        className: \"table-row\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: '/alerts/' + nam\n        },\n        className: \"table-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, nam))), React.createElement(\"td\", {\n        className: \"forbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"Button\",\n        onClick: () => this.delete(nam),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Sil\")));\n    });\n    let namesTable = React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"header__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Alert Names\"))), React.createElement(\"tbody\", {\n      className: \"table-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, namesMap)); // let whatToReturn = null;\n    // if(this.state.start){\n    //     whatToReturn = \n    //         <div>{namesTable}</div>\n    // }\n    // return (\n    //     <div className = \"container\">\n    //         {whatToReturn}\t\t\t\t\n    //     </div>\n    // );\n  }\n\n}\n\nexport default AlertLinks;","map":{"version":3,"sources":["C:\\Users\\emrec\\OneDrive\\Masaüstü\\AlertSystem\\alert_system_react\\src\\components\\mainpage\\alertLinks.js"],"names":["React","Component","axios","Link","AlertLinks","constructor","props","_isMouted","state","names","start","delete","bind","getNames","get","then","response","setState","data","catch","err","console","log","componentDidMount","componentDidUpdate","componentWillUnmount","name","render","namesMap","map","nam","index","pathname","namesTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './main.css';\r\n\r\nclass AlertLinks extends Component {\r\n\r\n    _isMouted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {names: [],\r\n                      start: false,\r\n        };\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n    \r\n    getNames(){\r\n        axios.get('http://localhost:8080/getNames').then(response=>{\r\n            if(this._isMouted){\r\n                this.setState({names: [...response.data],\r\n                               start: true});\r\n            }\r\n        }).catch(err =>{\r\n            console.log(err);\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        this._isMouted = true;\r\n        this.getNames();\r\n    }\r\n    componentDidUpdate(){\r\n        this.getNames();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMouted = false;\r\n    }\r\n\r\n    delete(name){\r\n        axios.delete('http://localhost:8080/delete/'+name).then(response =>{\r\n            console.log(response);\r\n        })\r\n    }\r\n  \r\n  render() {\r\n    let namesMap = this.state.names.map((nam, index) => {\r\n        return (\r\n          <tr className=\"table-row\" key={index} >\r\n            <td >\r\n                <h1  >\r\n                   <Link to={{pathname: '/alerts/'+nam}}  className=\"table-data\"  >{nam}</Link>\r\n                </h1>\r\n            </td>\r\n            <td className=\"forbutton\" ><button className=\"Button\" onClick={() => this.delete(nam)} >Sil</button></td>\r\n          </tr>\r\n        );\r\n    });\r\n    let namesTable =  (\r\n        <table className=\"table\">\r\n            <thead className=\"table-header\"> \r\n                <tr >\r\n                    <th className=\"header__item\">Alert Names</th>\r\n                </tr>        \r\n            </thead>\r\n            <tbody className=\"table-content\" >\r\n                {namesMap}\r\n            </tbody>\r\n        </table>\r\n    );\r\n    // let whatToReturn = null;\r\n    // if(this.state.start){\r\n    //     whatToReturn = \r\n    //         <div>{namesTable}</div>\r\n    // }\r\n    // return (\r\n    //     <div className = \"container\">\r\n    //         {whatToReturn}\t\t\t\t\r\n    //     </div>\r\n    // );\r\n  }\r\n  \r\n}\r\n\r\nexport default AlertLinks;"]},"metadata":{},"sourceType":"module"}